plugins {
    // java
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.4'

    // kotlin
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.lombok' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.jpa' version '2.0.0'

    // kotlin querydsl
    id 'org.jetbrains.kotlin.kapt' version '2.0.0'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // test code
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    // annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // random string
    testImplementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    // kotlin-querydsl
    kapt "com.querydsl:querydsl-apt:5.0.0:jakarta"

    // aws s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

test {
    useJUnitPlatform()
}

// Querydsl 빌드 옵션 (옵셔널)
String generated = "${buildDir}/generated/querydsl"

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

// kotlin
allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
    annotation("jakarta.persistence.MappedSuperclass")
}

// kotlin-querydsl
kapt {
    keepJavacAnnotationProcessors = true
}